{"version":3,"file":"search/search.js","names":[],"mappings":"","sources":["search/search.js"],"sourcesContent":["/* jslint camelcase: false */\n\nangular.module('bndry.search', ['ngSanitize', 'bndry.map'])\n  .directive('focusOn', function($parse) {\n    return {\n      restrict: 'A',\n      link: function(scope, elem, attr) {\n        var focusOn = $parse(attr.focusOn);\n\n        scope.$watch(focusOn, function(newVal) {\n          if (newVal === undefined) {\n            return;\n          }\n\n          if (newVal) {\n            elem[0].focus();\n          } else {\n            elem[0].blur();\n          }\n        });\n      }\n    };\n  })\n  .service('SearchSvc', function($q, MapSvc) {\n    this.search = function(input) {\n      var deferred = $q.defer();\n\n      if (input.length <= 0) {\n        deferred.resolve([]);\n      } else {\n        var request = {\n          input: input\n        };\n\n        request.bounds = MapSvc.map.getBounds();\n\n        MapSvc.autocompleteSvc.getPlacePredictions(request, function(suggestions, status) {\n          if (status === MapSvc.places.PlacesServiceStatus.OK) {\n            deferred.resolve(suggestions);\n          } else if (status === MapSvc.places.PlacesServiceStatus.ZERO_RESULTS) {\n            deferred.reject('No Results');\n          } else {\n            deferred.reject('An Error Occurred');\n          }\n        });\n      }\n\n      return deferred.promise;\n    };\n\n    this.loadPlaceFromReference = function(reference) {\n      if (!reference) {\n        return;\n      }\n\n      if (reference) {\n        MapSvc.placesSvc.getDetails({\n          reference: reference\n        }, function(place, status) {\n          if (status === MapSvc.places.PlacesServiceStatus.OK) {\n            if (place.geometry.viewport) {\n              // fitBounds because panToBounds does not zoom out to show entire bounding box\n              MapSvc.map.fitBounds(place.geometry.viewport);\n            } else if (place.geometry.location) {\n              MapSvc.map.panTo(place.geometry.location);\n            }\n          }\n        });\n      }\n    };\n  })\n  .controller('SearchCtrl', function($scope, $sce, $sessionStorage, SearchSvc) {\n    function throttledSearch(newVal) {\n      if (!newVal) {\n        return;\n      } else if (!resolved) {\n        queue = newVal;\n        return;\n      }\n\n      last = newVal;\n      resolved = false;\n\n      SearchSvc.search(newVal)\n        .then(formatSuggestions, errorMessage)\n        .then(function() {\n          resolved = true;\n\n          if (queue !== last) {\n            throttledSearch(queue);\n            queue = '';\n          }\n        });\n    }\n\n    function formatSuggestions(suggestions) {\n      for (var i = 0; i < suggestions.length; i++) {\n        var desc = suggestions[i].description;\n        suggestions[i].description = '';\n        var index = 0;\n\n        for (var j = 0; j < suggestions[i].matched_substrings.length; j++) {\n          var offset = suggestions[i].matched_substrings[j].offset;\n          var length = suggestions[i].matched_substrings[j].length;\n\n          suggestions[i].description += desc.slice(index, offset) + '<b>' + desc.substr(offset, length) + '</b>';\n\n          index = offset + length;\n        }\n        suggestions[i].description += desc.slice(index);\n        suggestions[i].description = '<span>' + suggestions[i].description + '</span>';\n        suggestions[i].description = $sce.trustAsHtml(suggestions[i].description);\n      }\n\n      $scope.suggestions = suggestions;\n    }\n    // Notifies user that no results were found\n\n    function errorMessage(message) {\n      if (typeof message === 'string') {\n\n        $scope.suggestions = [{\n          description: $sce.trustAsHtml('<i>' + message + '</i>'),\n          error: true\n        }];\n      }\n    }\n\n    var resolved = true,\n      queue = '',\n      last = '';\n\n    $scope.$tempStorage = $sessionStorage.$default({\n      query: '',\n      active: -1\n    });\n        \n    $scope.keydown = function(e) {\n      var enter = (e.which === 13),\n        up = (e.which === 38),\n        down = (e.which === 40);\n\n      if (enter || up || down) {\n        e.preventDefault();\n      } else {\n        $scope.$tempStorage.active = 0;\n        return;\n      }\n\n      if ($scope.suggestions[$scope.$tempStorage.active]) {\n        if (enter) {\n          $scope.loadOnMap($scope.suggestions[$scope.$tempStorage.active].reference);\n          $scope.show.header = '';\n        } else if (up && $scope.$tempStorage.active > -1) {\n          $scope.$tempStorage.active--;\n        } else if (down && $scope.$tempStorage.active < $scope.suggestions.length - 1) {\n          $scope.$tempStorage.active++;\n        }\n      }\n    };\n\n    $scope.loadOnMap = SearchSvc.loadPlaceFromReference;\n\n    $scope.$watch('$tempStorage.query', throttledSearch);\n  });\n"],"sourceRoot":"/source/"}