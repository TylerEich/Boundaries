{"version":3,"file":"color/colorSpec.js","names":[],"mappings":"","sources":["color/colorSpec.js"],"sourcesContent":["\nvar ColorSvc;\nvar converts, tos;\nbeforeEach(module('bndry.color'));\n\ndescribe('ColorSvc', function() {\n  beforeEach(inject(function(_ColorSvc_) {\n    ColorSvc = _ColorSvc_;\n  }));\n\n  describe('converts', function() {\n    var data = {\n      rgba: {\n        r: 0,\n        g: 0,\n        b: 1,\n        a: 1\n      },\n      hsla: {\n        h: 2/3,\n        s: 1.0,\n        l: 0.5,\n        a: 1\n      },\n      hex24: '0000ff',\n      hex32: '0000ffff'\n    };\n\n    function convertTo(convert, to) {\n      it(convert + ' to ' + to, function() {\n        var expectedValue = data[to];\n        var actualValue = ColorSvc\n          .convert[convert](data[convert])\n          .to[to]();\n\n        if (typeof expectedValue === 'object') {\n          for (var key in expectedValue) {\n            expect(actualValue[key])\n              .toBeCloseTo(expectedValue[key], 1/255);\n          }\n        } else {\n          expect(actualValue).toEqual(expectedValue);\n        }\n      });\n    }\n\n    angular.injector(['ng', 'bndry.color'])\n      .invoke(function(ColorSvc) {\n        converts = ColorSvc.convert;\n        tos = ColorSvc.to;\n      });\n    \n    for (var convert in converts) {\n      for (var to in tos) {\n        convertTo(convert, to);\n      }\n    }\n  });\n});\n"],"sourceRoot":"/source/"}