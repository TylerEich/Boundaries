/*
 Boundaries v1.0.0
 (c) 2013-2014 Tyler Eich https://github.com/TylerEich/Boundaries
 License: MIT
*/
"use strict";angular.module("bndry.action",[]).controller("ActionCtrl",["$rootScope","$scope","HistorySvc",function(e,t,n){t.clear=function(){e.$broadcast("action:clear"),n.clear()},t.undo=function(){n.hasUndo()&&n.undo()},t.redo=function(){n.hasRedo()&&n.redo()}}]),angular.module("bndry.color",["ngStorage"]).service("ColorSvc",["$localStorage",function(e){function t(){for(var e=1,t=0,n=arguments.length;n>e;e++)arguments[t]>arguments[e]&&(t=e);return arguments[t]}function n(){for(var e=1,t=0,n=arguments.length;n>e;e++)arguments[e]>arguments[t]&&(t=e);return arguments[t]}function r(e,t,n,r){return e=Math.round(255*e),t=Math.round(255*t),n=Math.round(255*n),r=Math.round(255*r),(e<<24|t<<16|n<<8|r)>>>0}var o={},a=this;this.convert={rgba:function(e){return o=r(e.r,e.g,e.b,e.a),a},hsla:function(e){var t,n=e,i=n.h,l=n.s,c=n.l,s=n.a;return i*=6,t=[c+=l*=.5>c?c:1-c,c-i%1*l*2,c-=l*=2,c,c+i%1*l,c+l],o=r(t[~~i%6],t[(16|i)%6],t[(8|i)%6],s),a},hex24:function(e){return a.convert.hex32(e+"FF"),a},hex32:function(e){return o=parseInt(e,16)>>>0,a}},this.to={rgba:function(){var e=(o>>24&255)/255,t=(o>>16&255)/255,n=(o>>8&255)/255,r=(255&o)/255;return o=0,{r:e,g:t,b:n,a:r}},hsla:function(){var e,r,o,i=a.to.rgba(),l=i,c=l.r,s=l.g,u=l.b,d=l.a,g=t(c,s,u),f=n(c,s,u),p=f-g;return e=r=o=(f+g)/2,f===g?e=r=0:(e=c===f?(s-u)/p%6:s===f?(u-c)/p+2:(c-s)/p+4,e/=6),{h:e,s:r,l:o,a:d}},hex24:function(){return a.to.hex32().substring(0,6)},hex32:function(){var e=o.toString(16);return o=0,("00000000"+e).slice(-8)}},e.$default({colors:[{name:"Red",r:1,g:0,b:0,a:.125,weight:10},{name:"Green",r:0,g:1,b:0,a:.125,weight:10},{name:"Blue",r:0,g:0,b:1,a:.125,weight:10}],activeColorIndex:1}),a.colors=e.colors,a.activeColorIndex=e.activeColorIndex,a.activeColor=function(){return a.colors[a.activeColorIndex]}}]).controller("ColorCtrl",["$scope","$localStorage","ColorSvc",function(e,t,n){e.fillColor=function(e){var t=n.colors[e];return"#"+n.convert.rgba(t).to.hex24()}}]),angular.module("bndry.drawing",["ngStorage","bndry.map","bndry.color","bndry.history"]).service("DirectionsSvc",["$q","MapSvc",function(e,t){var n=this,r=new t.DirectionsService;n.route=function(n){function o(e){r.route(a,function(n,r){if(r===t.DirectionsStatus.OK){var a=n.routes[0].overview_path;i.resolve(a)}else r===t.DirectionsStatus.UNKNOWN_ERROR&&3>e?(e++,o(e)):i.reject()},function(){3>e?(e++,o(e)):i.reject()})}if(2!==n.length)return console.error("Requires exactly 2 locations."),!1;var a={origin:n[0],destination:n[1],travelMode:t.TravelMode.DRIVING},i=e.defer();return o(0),i.promise}}]).service("DrawingSvc",["$rootScope","$q","$localStorage","DirectionsSvc","MapSvc","ColorSvc",function(e,t,n,r,o,a){function i(e){var t=void 0!==arguments[1]?arguments[1]:0,n=void 0!==arguments[2]?arguments[2]:0,r=void 0!==arguments[3]?arguments[3]:[],o=[t,n].concat(r);return Array.prototype.splice.apply(e,o)}function l(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])}function c(e){return new o.LatLng(e.lat,e.lng)}function s(e){for(var n=void 0!==arguments[1]?arguments[1]:!1,o=[],a=0;a<e.length-1;a++){var i,l=e[a],c=e[a+1];if(n){var s=t.defer();s.resolve(l),i=s.promise}else i=r.route([l,c]);o.push(i)}return t.all(o)}function u(e,t,n){return i(e,t,0,n)}function d(e,t,n){return i(e,t,n)}function g(e){return Array.isArray(e)?e:[e]}function f(e,t,n){i(e,t,0,n)}function p(e,t){for(var n=void 0!==arguments[2]?arguments[2]:1,r=i(e,t,n),o=0;o<r.length;o++)r[o]._marker.setMap(null)}function v(e,t){l(e,t);for(var n in t)switch(n){case"lat":case"lng":e._marker.setPosition(c(e))}}function h(e,t,n){var r=g(e),o=0,a=0;if(Array.isArray(n))for(a=0;a+t<r.length&&a<n.length;a++)r[t+a].index+=n[a],o+=n[a];for(a+=t;a<r.length;a++)r[a].index+=o}function m(e,t,n){for(var r=g(e),o=t;o<r.length;o++)r[o].index=n}function y(e,t,n){var r=e[t-1],o=0;r&&(o=r.index),m(n,0,o)}function b(e,t,n){var r={start:null,end:null,length:null,isLastNode:!1,isFirstNode:!1};if(e.length<=1)return r.start=r.end=r.length=0,r.isLastNode=r.isFirstNode=!0,r;var o=e[t-1],a=e[t],i=e[n],l=e[t+1];return o||(r.isFirstNode=!0),a&&null!==a.index?(r.start=a.index,i&&null!==i.index?(r.end=i.index,l&&null!==l.index?r.end=l.index:(r.isLastNode=!0,r.end++),r.length=r.end-r.start,r):void console.error("No node found at index "+n+".",e)):void console.error("No node found at index "+t+".",e)}function S(e,t){return b(e,t,t)}function w(e,t,n,r){var o=[],a=e[t-1];a&&o.push(c(a));for(var i=t;n>i;i++)o.push(c(e[i]));return o.length<2&&o.push(o[0]),s(o,r)}function $(e,t){for(var n,r,o=t[Symbol.iterator]();!(r=o.next()).done;){var a=r.value;n=e[a.index],v(a,{lat:n.lat(),lng:n.lng()})}}function x(e,n,r){var o=void 0!==arguments[3]?arguments[3]:[],a=void 0!==arguments[4]?arguments[4]:null,l=e._poly.getPath().getArray(),c=t.when();c.then(function(e,t,n,r,o){if(0!==n){var a=b(nodes,t,t+n);d(o,a.start,a.length),p(e.nodes,t,n)}}.bind(null,e,n,r,o,l)).then(function(e,t,n,r){return y(e.nodes,t,n),f(e.nodes,t,n),n=g(n),r?r:w(e.nodes,t,t+n.length,e.rigid)}.bind(null,e,n,o,a)).then(function(e,t,n){var r=e._poly.getPath().getArray(),o=e.nodes;S(o,t).isFirstNode||t--;var a,l,c,s,u=[];for(c=0;c<n.length;c++)a=n[c],l=a.pop(),s=S(o,t+c),i(r,s.start,s.length,a),u.push(a.length-s.length),s.isLastNode&&r.push(l);h(o,t,u);var d=o.slice(t,t+n.length);$(r,d),e._poly.setPath(r)}.bind(null,e,n))}function C(e,t){var n=void 0!==arguments[2]?arguments[2]:null,r=new o.Marker(O(e,t));return{lat:t.lat(),lng:t.lng(),index:n,_marker:r}}function T(e,t){var n,r=void 0!==arguments[2]?arguments[2]:!1;return n=r?new o.Polygon(R(e,r)):new o.Polyline(R(e,r)),{colorIndex:e,rigid:t,fill:r,_poly:n,nodes:[]}}function M(e,t,n){i(e,t,0,n)}function _(e,t){var n=void 0!==arguments[2]?arguments[2]:[],r=void 0!==arguments[3]?arguments[3]:null;x(e,t,0,n,r)}function k(e,t,n){for(var r=i(e,t,n),o=0;o<r.length;o++){var a=r[o];D(a,0,a.nodes.length),a._poly.setMap(null)}}function D(e,t,n){var r=void 0!==arguments[3]?arguments[3]:null,o=e.nodes,a=getRangeOfAffectedPathForNode(o,t);p(o,t,n),I(e,t,r,a)}function N(e,t,n){var r=void 0!==arguments[3]?arguments[3]:null,o=getRangeOfAffectedPathForNode(e.nodes,t);v(e.nodes[t],n),I(e,t,r,o)}function I(e,n,r,o){if(!o.isFirstNode||!o.isLastNode){var a,i=e.nodes,l=e._poly.getPath().getArray(),c=o.start,s=o.end-o.start;if(null===r)a=makePathsAroundNode(i,n,e.rigid);else{var g=t.defer();g.resolve(r),a=g.promise}a.then(function(t){d(l,c,s),h(i,o.indexOfAffectedNode+1,-s);var n,r,a,g=[],f=[];for(r=0;r<t.length;r++)r<t.length-1?(f.push(t[r].pop()),n=t[r].length):n=t.length-1,g.push(n);var p=Array.prototype.concat.apply([],t);for(u(l,c,p),h(i,o.indexOfAffectedNode+1,g),r=o.indexOfAffectedNode,a=0;a<f.length;r++,a++)v(i[r],{lat:f[a].lat(),lng:f[a].lng()});e._poly.setPath(l)})}}function A(e){return"rgba("+100*e.r+"%,"+100*e.g+"%,"+100*e.b+"%,"+e.a+")"}function P(e){var t=a.colors[e];return{path:o.SymbolPath.CIRCLE,scale:10,strokeColor:"#"+a.convert.rgba(t).to.hex24(),strokeOpacity:1,strokeWeight:2.5}}function O(e,t){return{clickable:!0,crossOnDrag:!1,cursor:"pointer",draggable:!0,flat:!0,icon:P(e),map:o.map,position:t}}function R(e,t){var n={clickable:!0,draggable:!1,editable:!1,map:o.map},r=a.colors[e];return t?(n.fillColor=A(r),n.strokeWeight=0):(n.strokeColor=A(r),n.strokeWeight=r.weight),n}{var L=this;t.when()}L.makeNode=C,L.makeDrawing=T,L.addDrawings=L.addDrawing=M,L.addNodesToDrawing=L.addNodeToDrawing=_,L.removeDrawings=L.removeDrawing=k,L.removeNodesFromDrawing=L.removeNodeFromDrawing=D,L.changeNodeOfDrawing=N}]).controller("DrawingCtrl",["$scope","$localStorage","DrawingSvc","ColorSvc","HistorySvc",function(e,t,n,r){function o(t,r){var o=e.$storage.activeColor,a=!1,s=!1;if(i()){var u=n.makeDrawing(o,a,s);c++,n.addDrawing(l,c,u)}var d=l[c],g=n.makeNode(o,r.latLng);n.addNodeToDrawing(d,d.nodes.length,g),console.table(d.nodes)}function a(e,t,r){var o=e[0],a=l[t],i=(a.nodes[r],o.latLng);n.changeNodeOfDrawing(a,r,{lat:i.lat(),lng:i.lng()})}function i(){if(0===l.length)return!0;var e=l[l.length-1];return e&&e.colorIndex!==r.activeColorIndex}e.$storage=t.$default({drawings:[],rigid:!1,colors:[{r:1,g:0,b:0,a:.125,weight:10},{r:0,g:1,b:0,a:.125,weight:10},{r:0,g:0,b:1,a:.125,weight:10}],activeColor:1});var l=e.drawings=[],c=-1;e.$on("map:click",o),e.$on("action:clear",function(){n.removeDrawings(l,0,l.length),c=-1}),e.marker={click:function(e){o(void 0,e[0])},dragend:a},e.poly={click:function(){}}}]),angular.module("bndry.geo",["bndry.map"]).service("GeolocationSvc",["$q",function(e){this.getLocation=function(){var t=e.defer();return"geolocation"in navigator?navigator.geolocation.getCurrentPosition(function(e){t.resolve(e)},function(e){t.reject(e)}):t.reject(!1),t.promise}}]).service("GeocodeSvc",["$q","MapSvc",function(e,t){this.geocode=function(n){var r=new t.Geocoder,o=e.defer();return r.geocode({location:n},function(e,n){n===t.GeocoderStatus.OK?o.resolve(e):o.reject(n)}),o.promise}}]),angular.module("bndry.history",[]).service("HistorySvc",function(){var e,t,n=[],r=-1,o=!1;return t=function(e,t){return e&&"function"==typeof e[t]?(o=!0,e[t](),o=!1,this):this},{add:function(t){return o?this:(n.splice(r+1,n.length-r),n.push(t),r=n.length-1,e&&e(),this)},setCallback:function(t){e=t},undo:function(){var o=n[r];return o?(t(o,"undo"),r-=1,e&&e(),this):this},redo:function(){var o=n[r+1];return o?(t(o,"redo"),r+=1,e&&e(),this):this},clear:function(){var t=n.length;n=[],r=-1,e&&t>0&&e()},hasUndo:function(){return-1!==r},hasRedo:function(){return r<n.length-1},getCommands:function(){return n}}}),angular.module("bndry.image",["ngStorage","bndry.map","bndry.drawing","bndry.color"]).service("ImageSvc",["$http","$document","$localStorage","MapSvc","DrawingSvc","ColorSvc",function(e,t,n,r,o,a){var i=this;i.pxSize=function(e,t){var n=.7;return{ratio:n,width:n>=1?e:Math.round(n*e),height:1>n?t:Math.round(1/n*t)}},i.generateUrl=function(){if(o.drawings){var e,t,l,c,s,u,d,g="https://maps.googleapis.com/maps/api/staticmap",f=[],p=i.pxSize(640,640);for(e=0;e<n.style.length;e++){l=n.style[e],c=[],"featureType"in l&&"all"!==l.featureType&&c.push("feature:"+l.featureType),"elementType"in l&&"all"!==l.elementType&&c.push("element:"+l.elementType);for(t=0;t<l.stylers.length;t++){s=l.stylers[t];for(u in s)d=s[u],"color"===u&&(d="0x"+d.substring(1)),c.push(u+":"+d)}c=c.join("|"),""!==c&&f.push("style="+c)}var v,h,m,y,b,S,w=new r.LatLngBounds;for(e=0;e<o.drawings.length;e++){for(h=[],v=o.drawings[e],m=v._poly.getPath().getArray(),t=0;t<m.length;t++)w.extend(m[t]);y=r.geometry.encoding.encodePath(m),b=n.colors[v.colorIndex],S="0x"+a.convert.rgba(b).to.hex32(),v.polygon?h.push("fillcolor:"+S):(h.push("color:"+S),h.push("weight:"+b.weight)),h.push("enc:"+y),h=h.join("|"),h&&f.push("path="+h)}var $=w.getNorthEast(),x=w.getSouthWest(),C=r.geometry.spherical.computeHeading,T=Math.abs(C($,x)+C(x,$))/2;return f.push((T>=45&&135>T)==p.ratio>=1?"size="+p.height+"x"+p.width:"size="+p.width+"x"+p.height),f.push("format=jpg"),f.push("scale=2"),f.push("sensor=true"),encodeURI(g+"?"+f.join("&"))}},i.generatePdf=function(e,t,n){n||(n=i.generateUrl()),console.info(n);var r={serif:!0,locality:e,notes:"See attached form for Do Not Calls.\nAdd new Do Not Calls as you find them.",legend:[],number:t,image:n},o=document.createElement("form");o.style="display: none;",o.enctype="x-www-form-urlencoded",o.action="http://boundariesapp.herokuapp.com/pdf",o.method="POST";var a=document.createElement("input");a.name="json",a.type="text",a.value=angular.toJson(r),o.appendChild(a),document.body.appendChild(o),o.submit(),document.body.removeChild(o)}}]).controller("ImageCtrl",["$scope","ImageSvc",function(e,t){e.locality="",e.number="",e.downloadPdf=t.generatePdf.bind(t,e.locality,e.number)}]),angular.module("bndry.map",["ngStorage"]).service("MapSvc",["$rootScope",function(e){function t(t){n.map.addListener(t,function(n){e.$broadcast("map:"+t,n)})}var n=this;angular.extend(n,google.maps),n.map=new n.Map(document.getElementById("map_canvas")),n.placesSvc=new n.places.PlacesService(n.map),n.autocompleteSvc=new n.places.AutocompleteService;var r=["bounds_changed","center_changed","click","dblclick","drag","dragend","dragstart","heading_changed","idle","maptypeid_changed","mousemove","mouseout","mouseover","projection_changed","resize","rightclick","tilesloaded","tilt_changed","zoom_changed"];r.forEach(t)}]).controller("MapCtrl",["$scope","$rootScope","$localStorage","MapSvc",function(e,t,n,r){n.$default({lat:0,lng:0,zoom:10,mapTypeId:r.MapTypeId.ROADMAP,style:[{stylers:[{visibility:"off"}]},{featureType:"landscape",stylers:[{visibility:"on"},{color:"#ffffff"}]},{featureType:"road",stylers:[{visibility:"on"}]},{elementType:"geometry.fill",stylers:[{color:"#ffffff"}]},{featureType:"road",elementType:"geometry.stroke",stylers:[{color:"#808080"}]},{elementType:"labels.text.stroke",stylers:[{color:"#ffffff"}]},{elementType:"labels.text.fill",stylers:[{color:"#000000"}]},{featureType:"water",stylers:[{visibility:"on"},{color:"#40bfbf"}]},{featureType:"water",elementType:"labels.text.stroke",stylers:[{color:"#ffffff"}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#dfdfdf"}]},{featureType:"road.local",elementType:"geometry.stroke",stylers:[{visibility:"off"}]},{featureType:"landscape.man_made",stylers:[{visibility:"off"}]}]}),e.$on("map:idle",function(){var e=r.map.getCenter(),t=r.map.getZoom();n.lat=e.lat(),n.lng=e.lng(),n.zoom=t}),e.$on("map:maptypeid_changed",function(){var e=r.map.getMapTypeId();n.mapTypeId=e});var o={center:new r.LatLng(n.lat,n.lng),disableDefaultUI:!0,disableDoubleClickZoom:!0,draggableCursor:"crosshair",draggingCursor:"move",mapTypeId:n.mapTypeId,mapTypeControl:!0,mapTypeControlOptions:{mapTypeIds:[r.MapTypeId.ROADMAP,r.MapTypeId.HYBRID,"custom"]},scaleControl:!0,zoom:n.zoom};r.map.setOptions(o);var a=new r.StyledMapType(n.style,{name:"Custom"});r.map.mapTypes.set("custom",a)}]).controller("MapActionCtrl",["$scope","MapSvc",function(e,t){e.setMapTypeId=function(e){e in t.MapTypeId&&(console.log(e,"in MapSvc.mapTypeId"),e=t.MapTypeId[e]),t.map.setMapTypeId(e)}}]),angular.module("bndry.mode",[]).controller("ModeCtrl",["$scope",function(e){e.rigid=!1,e.polygon=!1}]),angular.module("bndry.search",["ngSanitize","bndry.map"]).directive("focusOn",["$parse",function(e){return{restrict:"A",link:function(t,n,r){var o=e(r.focusOn);t.$watch(o,function(e){void 0!==e&&(e?n[0].focus():n[0].blur())})}}}]).service("SearchSvc",["$q","MapSvc",function(e,t){this.search=function(n){var r=e.defer();if(n.length<=0)r.resolve([]);else{var o={input:n};o.bounds=t.map.getBounds(),t.autocompleteSvc.getPlacePredictions(o,function(e,n){n===t.places.PlacesServiceStatus.OK?r.resolve(e):r.reject(n===t.places.PlacesServiceStatus.ZERO_RESULTS?"No Results":"An Error Occurred")})}return r.promise},this.loadPlaceFromReference=function(e){e&&e&&t.placesSvc.getDetails({reference:e},function(e,n){n===t.places.PlacesServiceStatus.OK&&(e.geometry.viewport?t.map.fitBounds(e.geometry.viewport):e.geometry.location&&t.map.panTo(e.geometry.location))})}}]).controller("SearchCtrl",["$scope","$sce","$sessionStorage","SearchSvc",function(e,t,n,r){function o(e){if(e){if(!l)return void(c=e);s=e,l=!1,r.search(e).then(a,i).then(function(){l=!0,c!==s&&(o(c),c="")})}}function a(n){for(var r=0;r<n.length;r++){var o=n[r].description;n[r].description="";for(var a=0,i=0;i<n[r].matched_substrings.length;i++){var l=n[r].matched_substrings[i].offset,c=n[r].matched_substrings[i].length;n[r].description+=o.slice(a,l)+"<b>"+o.substr(l,c)+"</b>",a=l+c}n[r].description+=o.slice(a),n[r].description="<span>"+n[r].description+"</span>",n[r].description=t.trustAsHtml(n[r].description)}e.suggestions=n}function i(n){"string"==typeof n&&(e.suggestions=[{description:t.trustAsHtml("<i>"+n+"</i>"),error:!0}])}var l=!0,c="",s="";e.$tempStorage=n.$default({query:"",active:-1}),e.keydown=function(t){var n=13===t.which,r=38===t.which,o=40===t.which;return n||r||o?(t.preventDefault(),void(e.suggestions[e.$tempStorage.active]&&(n?(e.loadOnMap(e.suggestions[e.$tempStorage.active].reference),e.show.value=""):r&&e.$tempStorage.active>-1?e.$tempStorage.active--:o&&e.$tempStorage.active<e.suggestions.length-1&&e.$tempStorage.active++))):void(e.$tempStorage.active=0)},e.loadOnMap=r.loadPlaceFromReference,e.$watch("$tempStorage.query",o)}]),angular.module("bndry.status",["bndry.map","bndry.geo"]).directive("statusBar",["$interval",function(e){return{restrict:"E",scope:{hide:"@",value:"@"},template:'<div ng-style="{width: value * 100 + \'%\'}" style="height: 100%; position: absolute;" ng-hide="hide"></div>',link:function(t){e(function(){t.value=Math.random()},1e3)}}}]).controller("StatusCtrl",["$scope","$timeout","MapSvc","GeocodeSvc",function(e,t,n,r){var o="";e.locality=function(){return o},e.$on("map:idle",function(){r.geocode(n.map.getCenter()).then(function(e){var t=["administrative_area_level_3","administrative_area_level_2","administrative_area_level_1","country"];o="",e.forEach(function(e){if(!o)for(var n=0;n<t.length;n++)if(e.types.indexOf(t[n])>-1&&(o=e.formatted_address),o)return!1})},function(){o="Unknown Locality"})})}]),angular.module("bndry",["ngTouch","ngStorage","ui.map","ngAnimate","bndry.action","bndry.color","bndry.drawing","bndry.geo","bndry.history","bndry.image","bndry.map","bndry.mode","bndry.search","bndry.status"]).directive("noScroll",function(){return{restrict:"A",link:function(e,t){t.on("touchstart wheel",function(e){e.preventDefault()})}}}).controller("MasterCtrl",["$scope","$localStorage","ColorSvc",function(e,t,n){e.$storage=t,e.fillActiveColor=function(){var t=e.$storage.activeColor,r=e.$storage.colors[t],o=n.convert.rgba(r).to.hex24();return"#"+o},e.show={header:"",footer:""},e.setShowHeader=function(t){e.show.header=e.show.header===t?"":t},e.setShowFooter=function(t){e.show.footer=e.show.footer===t?"":t}}]).run(function(){window.addEventListener("orientationchange",function(){window.scrollTo(0,0)})});
//# sourceMappingURL=data:application/json;base64,