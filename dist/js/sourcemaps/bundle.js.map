{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/modules/main.js","src/modules/assert.js","src/modules/components/territory-editor-cmp.js","src/modules/directives/territory-editor-dir.js","src/modules/drawing-class.js","src/modules/event-target.js","src/modules/map-class.js","src/modules/map-view.js","src/modules/pubsub.js","src/modules/queue.js"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global angular */\n\nangular.module( 'bndry', [] );\n// require( '6to5ify/polyfill' );\n\nimport { MapCanvas } from './map-class';\nimport territoryEditorDir from './directives/territory-editor-dir';\nimport MapView from './map-view';\n\nwindow.mapCanvas = new MapCanvas(\n  document.querySelector( '#map_canvas' ),\n  {\n    center: {\n      lat: 41.123728,\n      lng: -84.864721\n    },\n    zoom: 17,\n    disableDefaultUI: true\n  }\n);\n\nwindow.mapView = new MapView( window.mapCanvas );\n// let territorEditorCmp = new TerritoryEditorCmp( mapView );\n","export default function assert( condition, message = 'Assertion failed' ) {\n  if ( !condition ) {\n    debugger;\n    \n    if ( typeof Error !== \"undefined\" ) {\n      throw new Error( message );\n    }\n    throw message; // Fallback\n  }\n}","/*\n  Bindings for editing Territories\n*/\n\nimport assert from '../assert';\nimport { on, emit } from '../pubsub';\n\nimport eventTarget from '../event-target';\n\nimport Queue from '../queue';\n// import undoManager from '../undo-manager';\nimport { Territory, Drawing, Node, Point } from '../drawing-class';\nimport { DirectionsService, LatLng } from '../map-class';\nimport { MapView } from '../map-view';\n\n\n\n\nlet directionsService = new DirectionsService();\n\n\n\n\nconst CREATE_MODE = 0,\n  EDIT_MODE = 1;\n\n\n\n\n  function latLngFromPoint( point ) {\n    assert( point instanceof Point );\n\n    return new LatLng( point.y, point.x );\n  }\n\n\n  function pointFromLatLng( latLng ) {\n    assert( typeof latLng.lat === 'function' &&\n      typeof latLng.lng === 'function' );\n\n    return new Point( latLng.lng(), latLng.lat() );\n  }\n\n\n\n\nfunction renderDrawing({ drawing }) {\n\n}\n\n\nfunction renderNode({ node }) {\n\n}\n\n\n\n\nfunction listenToNode( node ) {\n  return;\n\n\n\n  node.on( Node.event.MOVED, renderNode );\n}\n\n\nfunction ignoreNode( node ) {\n  return;\n\n\n\n  node.off( Node.event.MOVED, renderNode );\n}\n\n\n\n\nfunction listenToDrawing( drawing ) {\n  return;\n\n\n\n  drawing.on( Drawing.event.POINTS_ADDED, renderDrawing );\n  drawing.on( Drawing.event.POINTS_REMOVED, renderDrawing );\n  drawing.on( Drawing.event.COLOR_CHANGED, renderDrawing );\n  drawing.on( Drawing.event.FILL_CHANGED, renderDrawing );\n\n  let nodes = drawing.nodes();\n\n  for ( let node of nodes ) {\n    listenToNode( node );\n  }\n}\n\n\nfunction ignoreDrawing( drawing ) {\n  return;\n\n\n\n  drawing.off( Drawing.event.POINTS_ADDED, renderDrawing );\n  drawing.off( Drawing.event.POINTS_REMOVED, renderDrawing );\n  drawing.off( Drawing.event.COLOR_CHANGED, renderDrawing );\n  drawing.off( Drawing.event.FILL_CHANGED, renderDrawing );\n\n  let nodes = drawing.nodes();\n\n  for ( let node of nodes ) {\n    ignoreNode( node );\n  }\n}\n\n\n\n\nexport default class TerritoryEditorCmp {\n  constructor( /* syncedStorage */ ) {\n    this.territory = new Territory();\n\n    this._state = {\n      createNewDrawing: false,\n      rigid: false,\n      fill: false,\n      color: '#ff0000',\n      mode: CREATE_MODE,\n      activeDrawingIndex: -1,\n      activeNodeIndex: -1\n    };\n\n    this.queue = new Queue();\n\n    on( MapView.event.MAP_PRESSED,\n      ( eventName, event ) => this.addNode( event ) );\n    // on( MapView.event.MARKER_PRESSED, this.editDrawing );\n    on( MapView.event.MARKER_DRAGENDED,\n      ( eventName, event ) => this.moveNode( event ) );\n    // on( MapView.event.POLY_PRESSED, this.editDrawing );\n\n    // mapView.on( MapCanvas.event.PRESSED, this.addNode );\n    // mapView.on( Marker.event.PRESSED, this.editDrawing );\n    // mapView.on( Marker.event.DRAGGED, this.moveNode );\n    // mapView.on( Poly.event.PRESSED, this.editDrawing );\n  }\n\n\n  get createNewDrawing() {\n    return this._state.createNewDrawing;\n  }\n  set createNewDrawing( value ) {\n    assert( typeof value === 'boolean',\n      'Value of createNewDrawing must be boolean' );\n\n    this._state.createNewDrawing = value;\n  }\n\n\n  get rigid() {\n    return this._state.rigid;\n  }\n  set rigid( value ) {\n    assert( typeof value === 'boolean',\n      'Value of rigid must be boolean' );\n\n    this._state.rigid = value;\n  }\n\n\n  get fill() {\n    return this._state.fill;\n  }\n  set fill( value ) {\n    assert( typeof value === 'boolean',\n      'Value of fill must be boolean' );\n\n    this._state.fill = value;\n  }\n\n\n  get color() {\n    return this._state.color;\n  }\n  set color( value ) {\n    assert( typeof value === 'string',\n      'Value of color must be string' );\n\n    this._state.color = value;\n  }\n\n\n  get mode() {\n    return this._state.mode;\n  }\n  set mode( value ) {\n    assert( Number.isInteger( value ),\n      'Value of mode must be a constant' );\n\n    this._state.mode = value;\n  }\n\n\n  get activeDrawingIndex() {\n    return this._state.activeDrawingIndex;\n  }\n  set activeDrawingIndex( value ) {\n    assert( Number.isInteger( value ),\n      'Value of activeDrawingIndex must be integer' );\n\n    this._state.activeDrawingIndex = value;\n  }\n\n\n  get activeNodeIndex() {\n    return this._state.activeNodeIndex;\n  }\n  set activeNodeIndex( value ) {\n    assert( Number.isInteger( value ),\n      'Value of activeNodeIndex must be integer' );\n\n    this._state.activeNodeIndex = value;\n  }\n\n\n  addDrawing() {\n    let { rigid, fill, color } = this._state,\n      drawing = new Drawing({ rigid, fill, color }),\n      atIndex = ++this.activeDrawingIndex;\n\n    this.territory.addDrawing({\n      atIndex,\n      drawing\n    });\n\n    listenToDrawing( drawing );\n  }\n\n\n  removeDrawing() {\n    let activeDrawingIndex = this.activeDrawingIndex--,\n      drawing =\n        this.territory.removeDrawingAtIndex( activeDrawingIndex );\n\n    ignoreDrawing( drawing );\n  }\n\n\n  async fillPathAroundNode({ drawing, node }) {\n    assert( drawing instanceof Drawing );\n    assert( node instanceof Node );\n\n    let { start, end } = drawing.nodesAroundNode( node );\n\n    if ( !drawing.rigid ) {\n      if ( start === node && end === node ) {\n        // Single node\n        let latLngs;\n        try {\n          latLngs = await directionsService.route({\n            origin: latLngFromPoint( node ),\n            destination: latLngFromPoint( node )\n          });\n        } catch ( e ) {\n          alert( e );\n        }\n\n        points = latLngs.map( pointFromLatLng );\n\n        assert( points.length > 0 );\n\n        let { x, y } = points[ 0 ];\n        this.queue.add( node.moveTo.bind( node, x, y ) );\n      }\n\n      let latLngs, points;\n      if ( start !== node ) {\n        // Push to previous node\n        try {\n          latLngs = await directionsService.route({\n            origin: latLngFromPoint( start ),\n            destination: latLngFromPoint( node )\n          });\n        } catch ( e ) {\n          alert( e );\n        }\n\n        points = latLngs.map( pointFromLatLng );\n\n        let x, y;\n        ({ x, y } = points.shift() );\n        start.moveTo( x, y );\n        ({ x, y } = points.pop() );\n        node.moveTo( x, y );\n\n        this.queue.add( drawing.removePointsBetweenNodes.bind( drawing, start, node ) );\n        this.queue.add( drawing.addPointsAfterNode.bind( drawing, start, points ) );\n      }\n\n      if ( end !== node ) {\n        // Push to next node\n        try {\n          latLngs = await directionsService.route({\n            origin: latLngFromPoint( node ),\n            destination: latLngFromPoint( end )\n          });\n        } catch ( e ) {\n          alert( e );\n        }\n\n        points = latLngs.map( pointFromLatLng );\n\n        let x, y;\n        ({ x, y } = points.shift() );\n        node.moveTo( x, y );\n        ({ x, y } = points.pop() );\n        end.moveTo( x, y );\n\n        this.queue.add( drawing.removePointsBetweenNodes.bind( drawing, node, end ) );\n        this.queue.add( drawing.addPointsAfterNode.bind( drawing, node, points ) );\n      }\n    }\n  }\n\n\n  addNode( event ) {\n    if ( this.createNewDrawing ) {\n      this.addDrawing();\n      this.createNewDrawing = false;\n    }\n\n    let drawing = this.territory.atIndex( this.activeDrawingIndex ),\n      activeNodeIndex = ++this.activeNodeIndex,\n      [ x, y ] = [ event.latLng.lng(), event.latLng.lat() ],\n      node = new Node( x, y );\n\n    this.queue.add(() => {\n      drawing.addNode( node, activeNodeIndex );\n\n      this.fillPathAroundNode({ drawing, node });\n      // undoManager.add({\n      //   undo() {\n      //     this.removeNode();\n      //   },\n      //   redo() {\n      //     this.addNode( event );\n      //   }\n      // })\n    });\n\n    listenToNode( node );\n  }\n\n\n  moveNode({ latLng, node }) {\n    assert( node instanceof Node );\n\n    let drawing = this.territory.find(( drawing ) => drawing.indexOf( node ) > -1 ),\n      newPoint = pointFromLatLng( latLng );\n\n    assert( drawing instanceof Drawing );\n\n    this.queue.add(() => {\n      node.moveTo( newPoint.x, newPoint.y );\n      \n      return this.fillPathAroundNode({ drawing, node });\n    });\n  }\n\n\n  removeNode() {\n    this.queue.add(() => {\n      let drawing = this.territory.atIndex( this.activeDrawingIndex );\n    \n      let node = drawing.removeNodeAtIndex( this.activeNodeIndex );\n\n      ignoreNode( node );\n    });\n  }\n\n  \n  getTerritoryGeoJson() {\n    return this.territory.toGeoJson();\n  }\n\n\n  // Called when element is removed\n  detachedCallback() {\n    // Remove bindings between territory and map\n    this.territory.forEach( ignoreDrawing );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export function oldMain( mapView ) {\n//   on( Drawing.event.COLOR_CHANGED, ( eventName, { color, context }) => {\n//     changeDrawing( context, { color });\n//   });\n\n\n//   on( Drawing.event.FILL_CHANGED, ( eventName, { fill, context }) => {\n//     changeDrawing( context, { fill });\n//   });\n\n\n//   on( Drawing.event.RIGID_CHANGED, ( eventName, { rigid, context }) =>  {\n\n//   });\n\n\n\n\n//   const CREATE_MODE = 'Mode.create',\n//     EDIT_MODE = 'Mode.edit';\n\n//   const queue = new Queue();\n\n//   let territory = new Territory();\n\n//   const directionsService = new DirectionsService(),\n//     route = directionsService.route.bind( directionsService );\n\n//   const drawings = new WeakMap(),\n//     nodes = new WeakMap();\n\n\n\n\n\n//   // let drawingMode = CREATE_MODE,\n//   //   createNewDrawing = true,\n//   //   rigid = false,\n//   //   color = '#ff0000',\n//   //   fill = true;\n\n\n\n\n//   /*\n//     ********** DEBUG ONLY **********\n//     ********** DEBUG ONLY **********\n//     ********** DEBUG ONLY **********\n//     */\n//   window.drawingMode = CREATE_MODE,\n//     window.createNewDrawing = true,\n//     window.rigid = false,\n//     window.color = '#ff0000',\n//     window.fill = true;\n\n//   let geoJsons = JSON.parse(\n//     localStorage.getItem( 'drawings' ) || '[]'\n//   );\n\n//   for ( let geoJson of geoJsons ) {\n//     mapView.data.addGeoJson( geoJson );\n//   }\n\n//   window.saveDrawing = function() {\n//     let geoJson = territory.toGeoJson(),\n//       storedDrawings = JSON.parse(\n//         localStorage.getItem( 'drawings' ) || '[]'\n//       );\n\n//     storedDrawings.push( geoJson );\n//     localStorage.setItem( 'drawings', JSON.stringify( storedDrawings ) );\n\n//     mapView.data.addGeoJson( geoJson );\n\n//     for ( let i = territory.length - 1; i >= 0; i-- ) {\n//       territory.removeDrawingAtIndex( i );\n//     }\n\n//     window.createNewDrawing = true;\n//   };\n\n\n\n\n//   function latLngFromPoint( point ) {\n//     assert( point instanceof Point );\n\n//     return new LatLng( point.y, point.x );\n//   }\n\n\n//   function pointFromLatLng( latLng ) {\n//     assert( typeof latLng.lat === 'function' &&\n//       typeof latLng.lng === 'function' );\n\n//     return new Point( latLng.lng(), latLng.lat() );\n//   }\n\n\n//   function createNodeFromLatLng( latLng ) {\n//     return new Node( latLng.lng(), latLng.lat() );\n//   }\n\n\n//   function createPointFromLatLng( latLng ) {\n//     return new Point( latLng.lng(), latLng.lat() );\n//   }\n\n\n\n\n//   async function fillPathAroundNode({ drawing, node }) {\n//     assert( drawing instanceof Drawing );\n//     assert( node instanceof Node );\n\n//     let { start, end } = drawing.nodesAroundNode( node );\n\n//     if ( !drawing.rigid ) {\n//       if ( start === node && end === node ) {\n//         // Single node\n//         let latLngs;\n//         try {\n//           latLngs = await route({\n//             origin: latLngFromPoint( node ),\n//             destination: latLngFromPoint( node )\n//           });\n//         } catch ( e ) {\n//           alert( e );\n//         }\n\n//         points = latLngs.map( pointFromLatLng );\n\n//         assert( points.length > 0 );\n\n//         let { x, y } = points[ 0 ];\n//         queue.add( node.moveTo.bind( node, x, y ) );\n//       }\n\n//       let latLngs, points;\n//       if ( start !== node ) {\n//         // Push to previous node\n//         try {\n//           latLngs = await route({\n//             origin: latLngFromPoint( start ),\n//             destination: latLngFromPoint( node )\n//           });\n//         } catch ( e ) {\n//           alert( e );\n//         }\n\n//         points = latLngs.map( pointFromLatLng );\n\n//         let x, y;\n//         ({ x, y }) = points.shift();\n//         start.moveTo( x, y );\n//         ({ x, y }) = points.pop();\n//         node.moveTo( x, y );\n\n//         queue.add( drawing.removePointsBetweenNodes.bind( drawing, start, node ) );\n//         queue.add( drawing.addPointsAfterNode.bind( drawing, start, points ) );\n//       }\n\n//       if ( end !== node ) {\n//         // Push to next node\n//         try {\n//           latLngs = await route({\n//             origin: latLngFromPoint( node ),\n//             destination: latLngFromPoint( end )\n//           });\n//         } catch ( e ) {\n//           alert( e );\n//         }\n\n//         points = latLngs.map( pointFromLatLng );\n\n//         let x, y;\n//         ({ x, y }) = points.shift();\n//         node.moveTo( x, y );\n//         ({ x, y }) = points.pop();\n//         end.moveTo( x, y );\n\n//         queue.add( drawing.removePointsBetweenNodes.bind( drawing, node, end ) );\n//         queue.add( drawing.addPointsAfterNode.bind( drawing, node, points ) );\n//       }\n//     }\n//   }\n\n\n\n\n//   function pressed( eventName, { latLng, node }) {\n//     if ( drawingMode === EDIT_MODE ) {\n//       // Identify clicked segment\n//       // Highlight segment on map\n//     } else {\n//       drawingMode = EDIT_MODE;\n//     }\n//   }\n\n\n//   on( MapView.event.MARKER_PRESSED, pressed );\n//   on( MapView.event.POLY_PRESSED, pressed );\n\n\n\n\n//   mapView.on( MapView.event.MARKER_DRAGSTARTED, ({ latLng, node }) => {\n//     assert( node instanceof Node );\n\n//     let drawing = territory.find(( drawing ) => drawing.indexOf( node ) > -1 );\n\n//     assert( drawing instanceof Drawing );\n\n//     // queue.add( drawing.removeNode.bind( drawing, node ) );\n//   });\n\n\n//   on( MapView.event.MARKER_DRAGGED, ( eventName, { latLng, node }) => {\n//     assert( node instanceof Node );\n\n//     let point = createPointFromLatLng( latLng );\n\n//     node.moveTo( point.x, point.y );\n//   });\n\n\n//   on( MapView.event.MARKER_DRAGENDED, ( eventName, { latLng, node }) => {\n//     assert( node instanceof Node );\n\n//     let drawing = territory.find(( drawing ) => drawing.indexOf( node ) > -1 ),\n//       newPoint = createPointFromLatLng( latLng );\n\n//     assert( drawing instanceof Drawing );\n\n//     queue.add( node.moveTo.bind( node, newPoint.x, newPoint.y ) )\n//       .add( fillPathAroundNode.bind( null, { drawing, node }) );\n//   });\n\n\n\n\n//   on( MapView.event.MAP_PRESSED, ( eventName, { latLng }) => {\n//     if ( drawingMode === EDIT_MODE ) {\n//       // Exit edit mode when map is pressed\n//       drawingMode = CREATE_MODE;\n//     } else if ( drawingMode === CREATE_MODE ) {\n//       let node = createNodeFromLatLng( latLng );\n\n//       if ( createNewDrawing ) {\n//         // Add drawing to end of array\n//         let drawing = new Drawing({\n//           fill,\n//           rigid,\n//           color\n//         });\n\n//         queue.add( territory.addDrawing.bind( territory, {\n//           atIndex: territory.length,\n//           drawing\n//         }) )\n//           .add( drawing.addNode.bind( drawing, node, undefined ) )\n//           .add(() => territory.activeDrawingIndex = territory.length - 1 )\n//           .add( fillPathAroundNode.bind( null, {\n//             drawing,\n//             node\n//           }) );\n\n//         createNewDrawing = false;\n//       } else {\n//         // Add point to end of current drawing\n//         let drawing = territory.activeDrawing;\n\n//         queue.add( drawing.addNode.bind( drawing, node, undefined ) )\n//           .add( fillPathAroundNode.bind( null, {\n//             drawing,\n//             node\n//           }) );\n//       }\n//     }\n//   });\n// }\n","/* global angular */\n\n\n\n\nimport TerritoryEditorCmp from '../components/territory-editor-cmp';\n\n\n\n\nexport default angular.module( 'bndry' )\n.directive( 'territoryEditor', function() {\n  return {\n    restrict: 'E',\n    scope: {},\n    controller: TerritoryEditorCmp,\n    controllerAs: 'territoryEditor',\n    templateUrl: '../templates/territory-editor-tpl.html',\n    bindToController: true\n  };\n});\n","import { emit } from './pubsub';\nimport assert from './assert';\n\n\n\n\n/**\n  Path should `extend Array`, but browsers don't support that yet\n**/\nclass Path {\n  constructor( ...points ) {\n    this._points = points;\n  }\n\n\n  push( ...args ) {\n    return this._points.push( ...args );\n  }\n\n\n  splice( ...args ) {\n    return this._points.splice( ...args );\n  }\n\n\n  filter( cb ) {\n    return this._points.filter( cb );\n  }\n\n\n  find( cb ) {\n    return this._points.find( cb );\n  }\n\n\n  every( cb ) {\n    return this._points.every( cb );\n  }\n\n\n  some( cb ) {\n    return this._points.some( cb );\n  }\n\n  atIndex( i ) {\n    assert( i < this._points.length,\n      'Out of bounds' );\n    return this._points[ i ];\n  }\n\n\n  get length() {\n    return this._points.length;\n  }\n\n\n  indexOf( point, fromIndex ) {\n    assert( point instanceof Point );\n\n    return this._points.indexOf( point, fromIndex );\n  }\n\n\n  isValid() {\n    let points = this._points;\n\n    return (\n      // Path can be empty\n      points.length === 0 ||\n\n      // Non-empty Path must start and end with a Node\n      points[ points.length - 1 ] instanceof Node &&\n      points[ 0 ] instanceof Node\n    );\n  }\n}\n\n\n\n\nclass Point {\n  constructor( x, y ) {\n    assert( typeof x === 'number' );\n    assert( typeof y === 'number' );\n\n    this._x = x;\n    this._y = y;\n  }\n\n\n  get x() {\n    return this._x;\n  }\n  get y() {\n    return this._y;\n  }\n\n\n  get lat() {\n    return this._y;\n  }\n  get lng() {\n    return this._x;\n  }\n\n\n  equals( point ) {\n    return ( this.x === point.x && this.y === point.y )\n  }\n}\n\n\n\n\nclass Node extends Point {\n  constructor( x, y ) {\n    super( x, y );\n  }\n\n\n  moveTo( x, y ) {\n    assert( typeof x === 'number',\n      'X must be a number' );\n    assert( typeof y === 'number',\n      'Y must be a number' );\n\n    this._x = x;\n    this._y = y;\n\n    emit( Node.event.MOVED, {\n      x,\n      y,\n      context: this\n    });\n  }\n}\n\nNode.event = {\n  MOVED: 'Node.moved'\n};\n\n\n\n\nclass Drawing extends Path {\n  constructor({ color, fill, rigid }) {\n    super();\n\n    assert( typeof color === 'string' );\n    assert( typeof fill === 'boolean' );\n    assert( typeof rigid === 'boolean' );\n    this._color = color;\n    this._fill = fill;\n    this._rigid = rigid;\n\n    assert( this.isValid() );\n  }\n\n\n  isValid() {\n    let valid = super.isValid(),\n      rigid = this.rigid ? this.every(( point ) => point instanceof Node ) : true,\n      fill = this.fill ? this.length === 0 || this.atIndex( 0 ) === this.atIndex( this.length - 1 ) : true;\n      return ( valid && rigid && fill );\n  }\n\n\n  get color() {\n    return this._color;\n  }\n  set color( value ) {\n    assert( typeof value === 'string' );\n    this._color = value;\n\n    emit( Drawing.event.COLOR_CHANGED, {\n      color: value,\n      context: this\n    });\n  }\n\n\n  get fill() {\n    return this._fill;\n  }\n  set fill( value ) {\n    assert( typeof value === 'boolean' );\n\n    let oldValue = this.fill;\n\n    this._fill = value;\n\n    if ( value !== oldValue ) {\n      if ( value && this.length > 0 ) {\n        this._addPoints({\n          atIndex: this.length,\n          points: [ this.atIndex( 0 ) ]\n        });\n      } else if ( !value ) {\n        this.removeNode(\n          this.atIndex( this.length - 1 )\n        );\n      }\n    }\n\n    emit( Drawing.event.FILL_CHANGED, {\n      fill: value,\n      context: this\n    });\n  }\n\n\n  get rigid() {\n    return this._rigid;\n  }\n  set rigid( value ) {\n    assert( typeof value === 'boolean' );\n\n    let oldValue = this.rigid;\n\n    this._rigid = value;\n\n    if ( value && value !== oldValue ) {\n      for ( let i = 0; i < this.length; i++ ) {\n        if ( !( this.atIndex( i ) instanceof Node ) ) {\n          this.splice( i, 1 );\n        }\n      }\n    }\n\n    emit( Drawing.event.RIGID_CHANGED, {\n      rigid: value,\n      context: this\n    });\n  }\n\n\n  nodesAroundNode( node ) {\n    let nodes = this.nodes(),\n      index = nodes.indexOf( node );\n\n    let { start, end, hasFirst, hasLast } = this._nodeIndicesAroundNodeIndex( index );\n\n    return {\n      start: this.atIndex( start ),\n      end: this.atIndex( end ),\n      hasFirst,\n      hasLast\n    };\n  }\n\n\n  _nodeIndicesAroundNodeIndex( index ) {\n    let start,\n      end,\n      hasFirst = false,\n      hasLast = false,\n      positions = this.nodePositions();\n\n    assert( index >= 0 && index < positions.length );\n\n    if ( index === 0 && !this.fill ) { // First node\n      start = positions[ index ]; // Include Node at index in splice\n      hasFirst = true;\n    } else if ( index === 0 && this.fill ) {\n      // Nodes at front and end are identical. Ignore last node\n      assert( positions.length >= 2 );\n      start = positions[ positions.length - 2 ]; // Wrap to exclude Node at -2\n    } else {\n      start = positions[ index - 1 ]; // Exclude previous Node from splice\n    }\n\n    if ( index === positions.length - 1 && !this.fill ) { // Last node\n      end = positions[ index ]; // Include Node at index in splice\n      hasLast = true;\n    } else {\n      end = positions[ index + 1 ]; // Exclude next Node from splice\n    }\n\n    return { start, end, hasFirst, hasLast };\n  }\n\n\n  removePointsBetweenNodes( node1, node2 ) {\n    assert( node1 instanceof Node );\n    assert( node2 instanceof Node );\n\n    let start = this.indexOf( node1 ),\n      end = this.indexOf( node2, start );\n\n    assert( start > -1,\n      'Node not found' );\n    assert( end > -1,\n      'Node not found' );\n    assert( start <= end );\n\n    start++; // Exclude node itself from operation\n\n    return this._removePoints({ start, end });\n  }\n\n\n  addPointsAfterNode( node, points ) {\n    assert( node instanceof Node );\n    assert( Array.isArray( points ) );\n    assert( this.indexOf( node ) > -1,\n      'Node not found' );\n\n    let atIndex = this.indexOf( node ) + 1;\n\n    return this._addPoints({ atIndex, points });\n  }\n\n\n  addNode( node, nodeIndex ) {\n    let nodePositions = this.nodePositions(),\n      atIndex = this.length;\n\n    assert( node instanceof Node );\n\n    assert( Number.isInteger( nodeIndex ) );\n    assert( nodeIndex > -1 );\n\n    if ( nodePositions.length > 0 && nodeIndex >= 0 && nodeIndex < nodePositions.length ) {\n      atIndex = nodePositions[ nodeIndex ] + 1;\n    }\n\n    let points = [ node ];\n    if ( this.length === 0 && this.fill ) {\n      points.push( node );\n    } else if ( this.fill && atIndex === this.length ) {\n      atIndex--;\n    }\n\n    this._addPoints({\n      atIndex,\n      points\n    });\n  }\n\n\n  removeNode( node ) {\n    assert( node instanceof Node );\n\n    let indexOnPath = this.indexOf( node ),\n      index = this.nodePositions().indexOf( indexOnPath );\n\n    return this.removeNodeAtIndex( index );\n  }\n\n\n  removeNodeAtIndex( index ) {\n    let { start, end, hasFirst, hasLast } = this._nodeIndicesAroundNodeIndex( index );\n\n    if ( !hasFirst && ( !this.fill || this.length > 2 ) ) {\n      start++;\n    }\n\n    if ( hasLast || ( this.fill && this.length <= 2 ) ) {\n      end++;\n    }\n\n    let removedPoints = this._removePoints({ start, end });\n\n    return removedPoints;\n  }\n\n\n  _removePoints({ start, end }) {\n    assert( start >= 0 );\n    assert( end <= this.length );\n    assert( start <= end || this.fill );\n\n    let removeLength = 0,\n      removedPoints = [];\n\n    if ( this.fill && start > end ) {\n      // assert( start < this.length - 1 );\n\n      // removeLength = this.length - start - 1;\n      removeLength = this.length - start;\n      \n      assert( removeLength >= 0 );\n\n      removedPoints.push(\n        ...this.splice( start, removeLength )\n      );\n\n      // Remove last point\n      // @Why: This point is also the first point of\n      //       the next operation. Removing the last point now\n      //       prevents duplicates.\n      removedPoints.pop();\n\n      this.push( this.atIndex( end ) );\n\n      start = 0;\n    }\n\n    removeLength = end - start;\n    removedPoints.push(\n      ...this.splice( start, removeLength )\n    );\n\n    assert( this.isValid(),\n      'Invalid path operation' );\n\n    if ( removedPoints.length === 2 && removedPoints[ 0 ] === removedPoints[ 1 ] ) {\n      removedPoints.pop();\n    }\n\n    emit( Drawing.event.POINTS_REMOVED, {\n      start,\n      end,\n      removedPoints: removedPoints,\n      context: this\n    });\n\n    return removedPoints;\n  }\n\n\n  _addPoints({ atIndex, points }) {\n    assert( atIndex >= 0 && atIndex <= this.length,\n      'Out of bounds' );\n    assert( Array.isArray( points ),\n      'points must be an Array' );\n\n    this.splice( atIndex, 0, ...points );\n\n    // if ( this.fill && atIndex === 0 ) {\n    //   if ( this.length === 1 && this.atIndex( 0 ) instanceof Node ) {\n    //     this.push( this.atIndex( 0 ) );\n    //   } else if ( this.length > 1 ) {\n    //     this.removePoints({\n    //       start: this.length - 1,\n    //       end: this.length\n    //     });\n    //     this.push( this.atIndex( 0 ) );\n    //   }\n    // }\n\n    assert( this.isValid(),\n      'Invalid path operation' );\n\n    emit( Drawing.event.POINTS_ADDED, {\n      atIndex,\n      addedPoints: points,\n      context: this\n    });\n  }\n\n\n  pointAtIndex( index ) {\n    return this.atIndex( index );\n  }\n\n\n  nodePositions() {\n    let points = this,\n      positions = [];\n\n    for ( let i = 0; i < points.length; i++ ) {\n      let point = points.atIndex( i );\n\n      if ( point instanceof Node ) {\n        positions.push( i );\n      }\n    }\n\n    return positions;\n  }\n\n\n  points() {\n    return this.filter(() => true );\n  }\n\n\n  nodes() {\n    let nodes = this.filter(( point ) => point instanceof Node );\n    if ( this.fill ) {\n      nodes.pop();\n    }\n\n    return nodes;\n  }\n}\n\nDrawing.event = {\n  COLOR_CHANGED: 'Drawing.colorChanged',\n  FILL_CHANGED: 'Drawing.fillChanged',\n  RIGID_CHANGED: 'Drawing.rigidChanged',\n  POINTS_ADDED: 'Drawing.pointsAdded',\n  POINTS_REMOVED: 'Drawing.pointsRemoved'\n};\n\n\n\n\nclass Territory {\n  constructor() {\n    this._drawings = [];\n    this._activeDrawingIndex = -1;\n  }\n\n\n  get length() {\n    return this._drawings.length;\n  }\n\n\n  find( cb ) {\n    return this._drawings.find( cb );\n  }\n\n\n  atIndex( index ) {\n    assert( Number.isInteger( index ) );\n    assert( index >= 0 && index < this._drawings.length );\n\n    return this._drawings[ index ];\n  }\n\n\n  addDrawing({ atIndex, drawing }) {\n    assert( Number.isInteger( atIndex ) );\n    assert( drawing instanceof Drawing );\n\n    emit( Territory.event.DRAWING_ADDED, {\n      atIndex,\n      drawing,\n      context: this\n    });\n\n    return this._drawings.splice( atIndex, 0, drawing );\n  };\n\n\n  removeDrawing( drawing ) {\n    assert( drawing instanceof Drawing );\n\n    let index = this._drawings.indexOf( drawing );\n    assert( index > -1,\n      'Drawing not found' );\n\n    return this.removeDrawingAtIndex( index );\n  }\n\n\n  removeDrawingAtIndex( index ) {\n    assert( index >= 0 && index < this._drawings.length,\n      'Out of bounds' );\n\n    let removedDrawing = this._drawings.splice( index, 1 )[ 0 ],\n      nodes = removedDrawing.nodes();\n\n    for ( let node of nodes ) {\n      removedDrawing.removeNode( node );\n    }\n\n    emit( Territory.event.DRAWING_REMOVED, {\n      atIndex: index,\n      drawing: removedDrawing,\n      context: this\n    });\n\n    return removedDrawing;\n  }\n\n\n  toGeoJson() {\n    let geoJson = {\n      type: 'FeatureCollection'\n    };\n\n    geoJson.features = this._drawings.map(\n      ( drawing ) => {\n        let feature = {\n          type: 'Feature'\n        };\n        \n        let coordinates = drawing._points.map(\n          ( point ) => {\n            let { x, y } = point;\n            return [ x, y ];\n          }\n        );\n        \n        feature.geometry = {\n          type: drawing.fill ? 'Polygon' : 'LineString',\n          coordinates: drawing.fill ? [ coordinates ] : coordinates\n        };\n        \n        let { color, rigid, fill } = drawing;\n        feature.properties = { color, rigid, fill };\n        feature.properties.nodePositions = drawing.nodePositions();\n        \n        return feature;\n      }\n    );\n    \n    return geoJson;\n  }\n\n\n  static fromGeoJson( geoJson ) {\n    assert( typeof geoJson === 'object' );\n    let drawings = new Territory();\n\n    assert( Array.isArray( geoJson.features ) );\n    geoJson.features.forEach(\n      ( feature, i ) => {\n        assert( typeof feature.properties === 'object' );\n        assert( typeof feature.geometry === 'object' )\n\n        let { color, rigid, fill, nodePositions } = feature.properties;\n        assert( typeof color === 'string' );\n        assert( typeof rigid === 'boolean' );\n        assert( typeof fill === 'boolean' );\n        assert( Array.isArray( nodePositions ) );\n\n        let drawing = new Drawing({ color, rigid, fill });\n        \n        drawings.addDrawings({\n          atIndex: -1,\n          drawing\n        });\n              \n        let coordinates;\n        if ( fill ) {\n          coordinates = feature.geometry.coordinates[ 0 ];\n        } else {\n          coordinates = feature.geometry.coordinates;\n        }\n        assert( Array.isArray( coordinates ) );\n\n        let points = coordinates.map(\n          ( coordinate, i ) => {\n            let [ x, y ] = coordinate;\n\n            if ( nodePositions.indexOf( i ) === -1 ) {\n              return new Point( x, y );\n            } else {\n              return new Node( x, y );\n            }\n          }\n        );\n\n        drawing.addPoints({\n          atIndex: 0,\n          points\n        });\n\n        return drawing;\n      }\n    );\n    \n    return drawings;\n  }\n}\n\nTerritory.event = {\n  DRAWING_ADDED: 'Territory.drawingAdded',\n  DRAWING_REMOVED: 'Territory.drawingRemoved'\n};\n\n\n\n\nexport { Point, Node, Drawing, Territory };\n","\"use strict\";\n\nvar\n  PREFIX = \"@@\",\n  EventTarget = {},\n  descriptor = {\n    // in ES5 does not bother with enumeration\n    configurable: true,\n    value: null\n  },\n  defineProperty = Object.defineProperty ||\n  function defineProperty(obj, prop, desc) {\n    // in ES3 obj.hasOwnProperty() in for/in loops\n    // is still mandatory since there's no way\n    // to simulate non enumerable properties\n    obj[prop] = desc.value;\n  },\n  indexOf = [].indexOf || function indexOf(value) {\n    var i = this.length;\n    while (i-- && this[i] !== value) {}\n    return i;\n  },\n  has = EventTarget.hasOwnProperty;\n\nfunction configure(obj, prop, value) {\n  descriptor.value = value;\n  defineProperty(obj, prop, descriptor);\n  descriptor.value = null;\n}\n\nfunction on(self, type, listener) {\n  var array;\n  if (has.call(self, type)) {\n    array = self[type];\n  } else {\n    configure(self, type, array = []);\n  }\n  if (indexOf.call(array, listener) < 0) {\n    array.push(listener);\n  }\n}\n\nfunction dispatch(self, type, evt) {\n  var array, current, i;\n  if (has.call(self, type)) {\n    evt.target = self;\n    array = self[type].slice(0);\n    for (i = 0; i < array.length; i++) {\n      current = array[i];\n      if (typeof current === \"function\") {\n        current.call(self, evt);\n      } else if (typeof current.handleEvent === \"function\") {\n        current.handleEvent(evt);\n      }\n    }\n  }\n}\n\nfunction off(self, type, listener) {\n  var array, i;\n  if (has.call(self, type)) {\n    array = self[type];\n    i = indexOf.call(array, listener);\n    if (-1 < i) {\n      array.splice(i, 1);\n      if (!array.length) {\n        delete self[type];\n      }\n    }\n  }\n}\n\nconfigure(\n  EventTarget,\n  \"addEventListener\",\n  function addEventListener(type, listener) {\n    on(this, PREFIX + type, listener);\n  }\n);\n\nconfigure(\n  EventTarget,\n  \"dispatchEvent\",\n  function dispatchEvent(evt) {\n    dispatch(this, PREFIX + evt.type, evt);\n  }\n);\n\nconfigure(\n  EventTarget,\n  \"removeEventListener\",\n  function removeEventListener(type, listener) {\n    off(this, PREFIX + type, listener);\n  }\n);\n\nexport default EventTarget;\n","import assert from  './assert';\nimport { emit } from './pubsub';\n\n\n\n\nlet addListener = google.maps.event.addListener,\n  clearListeners = google.maps.event.clearListeners;\n\n\n\n\nclass MapCanvas extends google.maps.Map {\n  constructor( ...args ) {\n    super( ...args );\n\n    this._markers = [];\n    this._polys = [];\n\n    addListener( this, 'click',\n      ( event ) => emit( MapCanvas.event.PRESSED, {\n        event,\n        context: this\n      })\n    );\n  }\n\n\n  // get center() {\n  //   return super.getCenter();\n  // }\n  // set center( latLng ) {\n  //   assert( latLng instanceof LatLng,\n  //     'Center must be a LatLng' );\n  //   super.setCenter( latLng );\n  // }\n\n\n  // get zoom() {\n  //   return super.getZoom();\n  // }\n  // set zoom( value ) {\n  //   assert( typeof value === 'number',\n  //     'Zoom must be a number' );\n  //   super.setZoom( value );\n  // }\n\n\n  addMarker({ atIndex, marker }) {\n    assert( Number.isInteger( atIndex ) );\n    assert( atIndex >= 0 && atIndex <= this._markers.length );\n    assert( marker instanceof Marker );\n\n    marker.setMap( this );\n    \n    this._markers.splice( atIndex, 0, marker );\n  }\n\n\n  removeMarker( marker ) {\n    assert( marker instanceof Marker );\n\n    let index = this._markers.indexOf( marker );\n    assert( index > -1,\n      'Poly not found' );\n\n    return this.removePolyAtIndex( index );\n  }\n\n\n  removeMarkerAtIndex( index ) {\n    assert( Number.isInteger( index ) );\n    assert( index >= 0 && index < this._markers.length );\n\n    let marker = this._markers.splice( index, 1 )[ 0 ];\n    assert( marker instanceof Marker );\n\n    marker.destroy();\n  }\n\n\n  addPoly({ atIndex, poly }) {\n    assert( Number.isInteger( atIndex ) );\n    assert( atIndex >= 0 && atIndex <= this._polys.length );\n    assert( poly instanceof Poly );\n\n    poly.setMap( this );\n\n    this._polys.splice( atIndex, 0, poly );\n  }\n\n\n  removePoly( poly ) {\n    assert( poly instanceof Poly );\n\n    let index = this._polys.indexOf( poly );\n    assert( index > -1,\n      'Poly not found' );\n\n    return this.removePolyAtIndex( index );\n  }\n\n\n  removePolyAtIndex( index ) {\n    assert( Number.isInteger( index ) );\n    assert( index >= 0 && index < this._polys.length );\n\n    let poly = this._polys.splice( index, 1 )[ 0 ];\n    assert( poly instanceof Poly );\n\n    poly.destroy();\n  }\n}\n\nMapCanvas.event = {\n  PRESSED: 'MapCanvas.pressed'\n}\n\n\n\n\nclass Marker extends google.maps.Marker {\n  constructor( ...args ) {\n    super( ...args );\n\n    addListener( this, 'click',\n      ( event ) => emit( Marker.event.PRESSED, {\n        event,\n        context: this\n      })\n    );\n    addListener( this, 'dragstart',\n      ( event ) => emit( Marker.event.DRAGSTARTED, {\n        event,\n        context: this\n      })\n    );\n    addListener( this, 'drag',\n      ( event ) => emit( Marker.event.DRAGGED, {\n        event,\n        context: this\n      })\n    );\n    addListener( this, 'dragend',\n      ( event ) => emit( Marker.event.DRAGENDED, {\n        event,\n        context: this\n      })\n    );\n  }\n\n\n  setOptions( options ) {\n    assert( typeof options === 'object' );\n\n    if ( options.color ) {\n      // Generate new icon\n    }\n  }\n\n\n  destroy() {\n    clearListeners( this );\n    this.setMap( null );\n  }\n}\n\nMarker.event = {\n  PRESSED: 'Marker.pressed',\n  DRAGSTARTED: 'Marker.dragstarted',\n  DRAGGED: 'Marker.dragged',\n  DRAGENDED: 'Marker.dragended'\n}\n\n\n\n\nclass Poly {\n  constructor( options ) {\n    assert( typeof options === 'object' );\n\n    if ( options.fillColor || options.fillOpacity !== undefined ) {\n      this._poly = new google.maps.Polygon( options );\n    } else {\n      this._poly = new google.maps.Polyline( options );\n    }\n\n    addListener( this._poly, 'click',\n      ( event ) => emit( Poly.event.PRESSED, {\n        event,\n        context: this\n      })\n    );\n  }\n\n\n  get length() {\n    return this._poly.getPath().getLength();\n  }\n\n\n  setMap( map ) {\n    this._poly.setMap( map );\n  }\n\n\n  addLatLngs({ atIndex, latLngs }) {\n    let path = this._poly.getPath();\n\n    assert( Number.isInteger( atIndex ) );\n    assert( atIndex >= 0 && atIndex <= path.getLength() );\n    assert( Array.isArray( latLngs ) );\n\n    latLngs.forEach(( latLng, i ) => {\n      path.insertAt( atIndex + i, latLng );\n    });\n  }\n\n\n  removeLatLngs({ start, end }) {\n    let path = this._poly.getPath();\n\n    assert( Number.isInteger( start ) );\n    assert( Number.isInteger( end ) );\n    assert( start >= 0 && start <= end );\n    assert( end <= path.getLength() );\n\n    let removeLength = end - start;\n\n    for ( let i = end - 1; i >= start; i-- ) {\n      path.removeAt( i );\n    }\n  }\n\n\n  destroy() {\n    clearListeners( this._poly );\n    this._poly.setMap( null );\n  }\n}\n\nPoly.event = {\n  PRESSED: 'Poly.pressed'\n};\n\n\n\n\nclass DirectionsService extends google.maps.DirectionsService {\n  constructor( ...args ) {\n    super( ...args );\n  }\n\n\n  route({ origin, destination }) {\n    assert( origin instanceof LatLng );\n    assert( destination instanceof LatLng );\n\n    return new Promise(( resolve, reject ) => {\n      super.route({\n        origin,\n        destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, ( result, status ) => {\n        if ( status === google.maps.DirectionsStatus.OK ) {\n          resolve( result.routes[ 0 ].overview_path );\n        } else {\n          reject( status );\n        }\n      });\n    });\n  }\n}\n\n\n\n\nclass AutocompleteService extends google.maps.places.AutocompleteService {\n\n};\n\n\n\n\nlet LatLng = google.maps.LatLng;\n\n\n\nexport { MapCanvas, Marker, Poly, LatLng, DirectionsService };\n","import assert from './assert';\nimport { emit, on } from './pubsub';\nimport EventTarget from './event-target';\nimport { MapCanvas, Marker, Poly, LatLng } from './map-class';\nimport { Node, Drawing, Territory } from './drawing-class';\n\n\n\n\nexport const MapView = {\n  event: {\n    MAP_PRESSED: 'MapView.mapPressed',\n    POLY_PRESSED: 'MapView.polyPressed',\n    MARKER_PRESSED: 'MapView.markerPressed',\n    MARKER_DRAGSTARTED: 'MapView.markerDragstart',\n    MARKER_DRAGGED: 'MapView.markerDrag',\n    MARKER_DRAGENDED: 'MapView.markerDragend'\n  }\n}\n\n\n\n\nexport default function() {\n  let polys = new Map(),\n    markers = new Map(),\n    markerIndices = new Map();\n\n\n  function createLatLngFromPoint( point ) {\n    return new LatLng( point.y, point.x );\n  }\n\n\n  function createLatLngsFromPoints( points ) {\n    return points.map( createLatLngFromPoint );\n  }\n\n\n\n\n  function createPolyFromDrawing( drawing ) {\n    let options = {\n      clickable: true,\n      draggable: false,\n      editable: false,\n      geodesic: false,\n      visible: true\n    };\n\n    options.strokeOpacity = 0.5;\n    options.strokeColor = drawing.color;\n\n    if ( drawing.fill ) {\n      options.fillColor = drawing.color;\n      options.fillOpacity = 0.25;\n      options.strokeWeight = 8;\n    } else {\n      options.strokeWeight = 8;\n    }\n\n    return new Poly( options );\n  }\n\n\n\n\n  function createIconFromColor( color ) {\n    return {\n      fillColor: color,\n      fillOpacity: 0,\n      path: 'M-16,0 a 16,16 0 1,0 32,0a16,16 0 1,0 -32,0 M-2,0 a 2,2 0 1,0 4,0a2,2 0 1,0 -4,0',\n      scale: 1,\n      strokeColor: color,\n      strokeOpacity: 1,\n      strokeWeight: 4\n    };\n  }\n\n\n\n\n  function createMarker({ point, color }) {\n    let latLng = {\n      lat: point.y,\n      lng: point.x\n    };\n\n    return new Marker({\n      clickable: true,\n      crossOnDrag: false,\n      cursor: 'pointer',\n      draggable: true,\n      icon: createIconFromColor( color ),\n      opacity: 1,\n      position: latLng,\n      visible: true\n    })\n  }\n\n\n\n\n  function findKeyByValue({ map, searchValue }) {\n    let entries = map.entries(),\n      entry;\n\n    while ( entry = entries.next() ) {\n      assert( !entry.done );\n\n      let [ key, value ] = entry.value;\n      if ( value === searchValue ) return key;\n    }\n  }\n\n\n\n\n  function nodeForMarker( marker ) {\n    return findKeyByValue({\n      map: markers,\n      searchValue: marker\n    });\n  }\n\n\n\n\n  function drawingForPoly( poly ) {\n    return findKeyByValue({\n      map: polys,\n      searchValue: poly\n    });\n  }\n\n\n\n\n  window.mapCanvas.data.setStyle(( feature ) => {\n    let color = feature.getProperty( 'color' ),\n      fill = feature.getProperty( 'fill' );\n\n    if ( fill ) {\n      return {\n        strokeColor: color,\n        strokeOpacity: 0.25,\n        strokeWeight: 5,\n        fillColor: color,\n        fillOpacity: 0.25\n      }\n    } else {\n      return {\n        strokeColor: color,\n        strokeWeight: 5\n      }\n    }\n  });\n\n\n\n\n  on( Territory.event.DRAWING_ADDED, ( eventName, { atIndex, drawing, context }) => {\n    let poly = createPolyFromDrawing( drawing );\n\n    window.mapCanvas.addPoly({ atIndex, poly });\n    polys.set( drawing, poly );\n  });\n\n\n  on( Territory.event.DRAWING_REMOVED, ( eventName, { drawing }) => {\n    let poly = polys.get( drawing );\n    assert( poly instanceof Poly );\n\n    window.mapCanvas.removePoly( poly );\n    polys.delete( drawing );\n  });\n\n\n\n\n  on( Drawing.event.COLOR_CHANGED, ( eventName, { color, context }) => {\n    assert( polys.has( context ) );\n\n    let poly = polys.get( context );\n\n    poly.setOptions({ color });\n\n    let nodes = context.nodes();\n    for ( let node of nodes ) {\n      assert( markers.has( node ) );\n\n      let marker = markers.get( node );\n      marker.setOptions({ strokeColor: color });\n    }\n  });\n\n\n  on( Drawing.event.FILL_CHANGED, ( eventName, { fill, context }) => {\n    assert( polys.has( context ) );\n\n    let poly = createPolyFromDrawing( context );\n\n    polys.set( context, poly );\n  });\n\n\n  on( Drawing.event.POINTS_ADDED, ( eventName, { atIndex, addedPoints, context }) => {\n    assert( polys.has( context ) );\n\n    let poly = polys.get( context );\n\n    let latLngs = createLatLngsFromPoints( addedPoints );\n    poly.addLatLngs({ atIndex, latLngs });\n\n    let color = context.color,\n      nodes = context.nodes(),\n      len = addedPoints.length,\n      skipLastPoint = context.fill && atIndex + len === context.length;\n\n    addedPoints.forEach(( point, i ) => {\n      if ( skipLastPoint && i === len - 1 ) return;\n\n      if ( point instanceof Node ) {\n        let markerIndex = nodes.indexOf( point );\n\n        let marker = createMarker({ point, color });\n\n        window.mapCanvas.addMarker({ atIndex: markerIndex, marker });\n        markers.set( point, marker );\n        markerIndices.set( marker, atIndex + i );\n      }\n    });\n\n    // for ( let point of addedPoints ) {\n    //   if ( point instanceof Node ) {\n    //     let atIndex = nodes.indexOf( point );\n\n    //     let marker = createMarker({ point, color });\n    //     window.mapCanvas.addMarker({ atIndex, marker });\n    //     markers.set( point, marker );\n    //   }\n    // }\n  });\n\n\n  on( Drawing.event.POINTS_REMOVED, ( eventName, { start, end, removedPoints, context }) => {\n    assert( polys.has( context ) );\n\n    let poly = polys.get( context ),\n      len = removedPoints.length,\n      skipLastPoint = context.fill && end === context.length;\n\n    poly.removeLatLngs({ start, end });\n\n    removedPoints.forEach(( point, i ) => {\n      if ( skipLastPoint && i === len ) return;\n\n      if ( point instanceof Node ) {\n        assert( markers.has( point ) );\n\n        let marker = markers.get( point );\n\n        marker.destroy();\n        markers.delete( point );\n        markerIndices.delete( marker );\n      }\n    });\n  });\n\n\n\n\n  on( Node.event.MOVED, ( eventName, { x, y, context }) => {\n    assert( context instanceof Node );\n    assert( markers.has( context ) );\n\n    let marker = markers.get( context ),\n      index = markerIndices.get( marker );\n\n    marker.setPosition( createLatLngFromPoint( context ) );\n\n    let entries = polys.entries(),\n      entry;\n\n    while ( entry = entries.next() ) {\n      assert( !entries.done,\n        'Poly not found' );\n\n      let [ drawing, poly ] = entry.value,\n        index = drawing.indexOf( context );\n      if ( index > -1 ) {        \n        if ( drawing.fill && index === 0 ) {\n          poly.removeLatLngs({\n            start: index,\n            end: index + 1\n          });\n          poly.removeLatLngs({\n            start: poly.length - 1,\n            end: poly.length\n          });\n\n          let latLng = createLatLngFromPoint({ x, y });\n          poly.addLatLngs({\n            atIndex: index,\n            latLngs: [ latLng ]\n          });\n          poly.addLatLngs({\n            atIndex: poly.length,\n            latLngs: [ latLng ]\n          });\n        } else {\n          poly.removeLatLngs({\n            start: index,\n            end: index + 1\n          });\n\n          poly.addLatLngs({\n            atIndex: index,\n            latLngs: [ createLatLngFromPoint({ x, y }) ]\n          });\n        }\n\n        return;\n      }\n    }\n  });\n\n\n  \n\n  on( MapCanvas.event.PRESSED,\n    ( eventName, { event }) => emit( MapView.event.MAP_PRESSED, event )\n  );\n\n\n\n\n  on( Poly.event.PRESSED,\n    ( eventName, { event, context }) => emit( MapView.event.POLY_PRESSED, {\n      latLng: event.latLng,\n      node: drawingForPoly( context )\n    })\n  );\n\n\n\n\n  on( Marker.event.PRESSED,\n    ( eventName, { event, context }) => emit( MapView.event.MARKER_PRESSED, {\n      latLng: event.latLng,\n      node: nodeForMarker( context )\n    })\n  );\n\n\n  on( Marker.event.DRAGSTARTED,\n    ( eventName, { event, context }) => emit( MapView.event.MARKER_DRAGSTARTED, {\n      latLng: event.latLng,\n      node: nodeForMarker( context )\n    })\n  );\n\n\n  on( Marker.event.DRAGGED,\n    ( eventName, { event, context }) => {\n      let node = nodeForMarker( context ),\n        entries = polys.entries(),\n        entry;\n\n      while ( entry = entries.next() ) {\n        assert( !entries.done,\n          'Poly not found' );\n\n        let [ drawing, poly ] = entry.value,\n          index = drawing.indexOf( node );\n        if ( index > -1 ) {\n          if ( drawing.fill && index === 0 ) {\n            poly.removeLatLngs({\n              start: index,\n              end: index + 1\n            });\n            poly.removeLatLngs({\n              start: poly.length - 1,\n              end: poly.length\n            });\n\n            let latLng = context.getPosition();\n            poly.addLatLngs({\n              atIndex: index,\n              latLngs: [ latLng ]\n            });\n            poly.addLatLngs({\n              atIndex: poly.length,\n              latLngs: [ latLng ]\n            });\n          } else {\n            poly.removeLatLngs({\n              start: index,\n              end: index + 1\n            });\n\n            poly.addLatLngs({\n              atIndex: index,\n              latLngs: [ context.getPosition() ]\n            });\n          }\n          \n          return;\n        }\n      }\n\n      emit( MapView.event.MARKER_DRAGGED, {\n        latLng: event.latLng,\n        node: nodeForMarker( context )\n      });\n    }\n  );\n\n\n  on( Marker.event.DRAGENDED,\n    ( eventName, { event, context }) => emit( MapView.event.MARKER_DRAGENDED, {\n      latLng: event.latLng,\n      node: nodeForMarker( context )\n    })\n  );\n}\n","const [ emit, on, off ] = [\n  PubSub.publishSync.bind( PubSub ),\n  PubSub.subscribe.bind( PubSub ),\n  PubSub.unsubscribe.bind( PubSub )\n];\n\nexport { emit, on, off };","export default class Queue {\n  constructor() {\n    this._q = Promise.resolve( true );\n  }\n\n  add( cb ) {\n    this._q = this._q.then( cb );\n\n    return this;\n  }\n}"]}